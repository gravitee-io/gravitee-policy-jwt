{
  "type" : "object",
  "id" : "urn:jsonschema:io:gravitee:policy:jwt:configuration:JWTPolicyConfiguration",
  "properties" : {
    "signature": {
      "title": "Signature",
      "description": "Define how the JSON Web Token must be signed.",
      "type" : "string",
      "default": "RSA_RS256",
      "enum" : [
        "RSA_RS256",
        "RSA_RS384",
        "RSA_RS512",
        "HMAC_HS256",
        "HMAC_HS384",
        "HMAC_HS512"
      ],
      "x-schema-form": {
        "type": "select",
        "titleMap": {
          "RSA_RS256": "RS256 - RSA signature with SHA-256",
          "RSA_RS384": "RS384 - RSA signature with SHA-384",
          "RSA_RS512": "RS512 - RSA signature with SHA-512",
          "HMAC_HS256": "HS256 - HMAC with SHA-256, requires 256+ bit secret",
          "HMAC_HS384": "HS384 - HMAC with SHA-384, requires 384+ bit secret",
          "HMAC_HS512": "HS512 - HMAC with SHA-512, requires 512+ bit secret"
        }
      }
    },
    "publicKeyResolver" : {
      "title": "JWKS resolver",
      "description": "Define how the JSON Web Key Set is retrieved",
      "type" : "string",
      "default": "GIVEN_KEY",
      "enum" : [
        "GIVEN_KEY",
        "GATEWAY_KEYS",
        "JWKS_URL"
      ],
      "x-schema-form": {
        "type": "select",
        "titleMap": {
          "GIVEN_KEY": "GIVEN_KEY: You must provide a signature key as a resolver parameter according to the signature algorithm",
          "GATEWAY_KEYS": "GATEWAY_KEYS: Look for signature key from API Gateway configuration according to issuer and kid from incoming JWT",
          "JWKS_URL": "JWKS_URL: Retrieve JWKS from URL (Basically, URL ending with '/.well-known/jwks.json')"
        }
      }
    },
    "resolverParameter" : {
      "title": "Resolver parameter",
      "description": "Set the signature key <i><b>(GIVEN_KEY)</b></i> or a JWKS URL <i><b>(JWKS_URL)</b></i> following selected resolver <i>(support EL)</i>.",
      "type" : "string"
    },
    "extractClaims" : {
      "title": "Extract JWT Claims",
      "description": "Put claims into the 'jwt.claims' context attribute.",
      "type" : "boolean",
      "default": false
    },
    "propagateAuthHeader" : {
      "title": "Propagate Authorization header",
      "description": "Allows to propagate Authorization header to the target endpoints",
      "type" : "boolean",
      "default": true
    }
  },
  "required": [
    "signature",
    "publicKeyResolver"
  ]
}